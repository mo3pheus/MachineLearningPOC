package org.sanket.codingGym.DataMining.algorithms.classification;

import net.sf.javaml.core.Dataset;

import java.io.File;
import java.util.Map;

import be.abeel.util.Pair;
import net.sf.javaml.classification.KNearestNeighbors;
import net.sf.javaml.classification.evaluation.EvaluateDataset;
import net.sf.javaml.classification.evaluation.PerformanceMeasure;
import net.sf.javaml.sampling.Sampling;
import net.sf.javaml.tools.data.FileHandler;

public class GenericClassifier {
	
	private Pair<Dataset,Dataset> inputData;
	private KNearestNeighbors knn;
	
	public GenericClassifier(String dataLocation, int classes){
		
		/* datasets/IrisDataset/iris.data */
		Dataset input = FileHandler.loadDataset(new File(dataLocation), numColumns, delimiter);
		
		
		Sampling s = Sampling.SubSampling;
		inputData = s.sample(data, (int)(0.8f*data.size()));
		this.knn = new KNearestNeighbors(classes);
	}
	
	public void buildClassifier(){
		knn.buildClassifier(inputData.x());
	}
	
	public void reportResults(){
		Map<Object, PerformanceMeasure> results = EvaluateDataset.testDataset(knn, inputData.y());
		System.out.println(results.entrySet());
	}
}
