package learning.solutions.advanced.matrix.driver;

import java.awt.Frame;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.util.Properties;

import learning.solutions.advanced.matrix.domain.VirtualElement;
import learning.solutions.advanced.matrix.utils.EnvironmentUtils;

public class MatrixArchitect extends Frame {

	/**
	 * 
	 */
	private static final long	serialVersionUID	= 4198825794676956718L;
	private Properties matrixDefinition = null;
	private VirtualElement[]	elements			= null;

	private void render(Graphics2D canvas) {
		for (VirtualElement vElement : elements) {
			vElement.draw(canvas);
		}
	}

	public void paint(Graphics g) {
		super.paint(g);
		Graphics2D canvas = (Graphics2D) g;
		render(canvas);
	}

	public void setElements(VirtualElement[] elements) {
		this.elements = elements;
	}
	
	public MatrixArchitect(Properties matrixDefinition) {
		super("Matrix");
		this.matrixDefinition = matrixDefinition;
		
		int frameHeight = Integer.parseInt(matrixDefinition.getProperty(EnvironmentUtils.FRAME_HEIGHT_PROPERTY));
		int frameWidth = Integer.parseInt(matrixDefinition.getProperty(EnvironmentUtils.FRAME_WIDTH_PROPERTY));
		this.setSize(frameHeight, frameWidth);
		this.setVisible(true);
	}
}
