package learning.solutions.advanced.matrix.engineeringLevel;

import java.awt.Point;
import java.util.Properties;

import learning.solutions.advanced.matrix.domain.NavCell;
import learning.solutions.advanced.matrix.domain.NavCell.Direction;
import learning.solutions.advanced.matrix.utils.EnvironmentUtils;

public class AdjacencyCalculator {
	private static final int	VALID_DIR		= 4;
	private Point				center			= null;
	private int					cellWidth		= -1;
	private Properties			matrixConfig	= null;
	private NavCell[]			adjacentNodes	= new NavCell[VALID_DIR];

	public AdjacencyCalculator(Point center, Properties matrixConfig) {
		this.center = center;
		this.matrixConfig = matrixConfig;

		cellWidth = Integer.parseInt(matrixConfig.getProperty(EnvironmentUtils.CELL_WIDTH_PROPERTY));
		Point[] adjNodes = new Point[VALID_DIR];
		 adjNodes[Direction.NORTH.getValue()] = new Point(center.x, center.y - cellWidth);
		 adjNodes[Direction.SOUTH.getValue()] = new Point(center.x, center.y + cellWidth);
		 adjNodes[Direction.SOUTH.getValue()] = new Point(center.x, center.y + cellWidth);
		 adjNodes[Direction.SOUTH.getValue()] = new Point(center.x, center.y + cellWidth);

	}

	public NavCell[] getAdjacentNodes() {
		return adjacentNodes;
	}
}
